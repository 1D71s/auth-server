# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserEntity {
  id: String!
  name: String!
  email: String!
  emailVerify: Boolean!
  role: String!
  provider: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type BanEntity {
  banId: String!
  userId: String!
  adminId: String!
  endBan: DateTime!
  description: String!
}

type Message {
  success: Boolean!
  message: String!
}

type UserId {
  id: String!
}

type AccessToken {
  accessToken: String!
}

type TokenEntity {
  token: String!
  exp: DateTime!
  userId: String!
  UserAgent: String!
}

type Query {
  getUser(input: UserEmail!): UserEntity!
  getAllUsers: [UserEntity!]!
  getUserBans: [BanEntity!]!
  updateTokens: AccessToken!
  getUsersWithRoles(input: RoleDto!): [UserEntity!]!
  getUserBansForAdmin(input: IdDto!): [BanEntity!]!
  getAllSessions: [TokenEntity!]!
  getAllUserSessionsAsAdmin(input: IdDto!): [TokenEntity!]!
  getAllSessionsAsAdmin: [TokenEntity!]!
}

input UserEmail {
  email: String!
}

input RoleDto {
  role: String!
}

input IdDto {
  id: String!
}

type Mutation {
  editUserInfo(input: EditUserDto!): UserEntity!
  deleteUser: Message!
  changePassword(input: ChangePasswordDto!): Message!
  register(input: RegisterDto!): UserId!
  login(input: LoginDto!): AccessToken!
  logout: Message!
  changeRole(input: ChangeRoleDto!): UserEntity!
  banUser(input: BanDto!): BanEntity!
  deleteBan(input: IdDto!): BanEntity!
  closeOneSession(input: RefreshTokenDto!): Message!
  closeAllUserSession: Message!
  closeOneSessionAsAdmin(input: TokenUserIdDto!): Message!
  closeAllUserSessionAsAdmin(input: IdDto!): Message!
  deleteUserAsAdmin(input: IdDto!): Message!
  changePasswordAsAdmin(input: ChangePasswordAdminDto!): Message!
  sendEmail(to: String!, subject: String!, text: String!): Boolean!
  sendCode: Boolean!
  confirmEmail(input: CodeDto!): UserEntity!
}

input EditUserDto {
  name: String!
}

input ChangePasswordDto {
  password: String!
  passwordRepeat: String!
  userPassword: String!
}

input RegisterDto {
  email: String!
  name: String!
  password: String!
  passwordRepeat: String!
}

input LoginDto {
  email: String!
  password: String!
}

input ChangeRoleDto {
  role: String!
  id: String!
}

input BanDto {
  userId: String!
  description: String!
  toDate: DateTime!
}

input RefreshTokenDto {
  token: String!
}

input TokenUserIdDto {
  id: String!
  token: String!
}

input ChangePasswordAdminDto {
  password: String!
  passwordRepeat: String!
  id: String!
}

input CodeDto {
  code: String!
}